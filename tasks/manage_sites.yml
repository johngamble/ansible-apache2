---

- name: Creating default vhost folders
  file: dest=/var/www/{{ item[0].id }}/{{ item[1] }} state=directory owner={{ apache2_run_user }} group={{ apache2_run_group }}
  when: (item[0].add_webroot is defined and item[0].add_webroot == true) or (item[0].create_default_folders is defined and item[0].create_default_folders == true)
  with_nested: 
    - apache2_sites
    - [ "{{ apache2_vhost_ssl_folder }}", "{{ apache2_vhost_tmp_folder }}", "{{ apache2_vhost_web_root_folder }}" ]
  tags:
    - web
    - apache2-php
    - manage

- name: Creating additional vhost folders
  file: dest=/var/www/{{ item[0].id }}/{{ item[1] }} state=directory owner={{ apache2_run_user }} group={{ apache2_run_group }}
  when: (item[0].add_webroot is defined and item[0].add_webroot == true) or (item[0].create_default_folders is defined and item[0].create_default_folders == true)
  with_nested: 
    - apache2_sites
    - apache2_vhost_additional_folders
  tags:
    - web
    - apache2-php
    - manage

- name: Create log folders
  file: dest=/var/log/apache2/{{ item.id }} state=directory owner={{ apache2_run_user }} group={{ apache2_run_group }}
  with_items: apache2_sites
  tags:
    - web
    - apache2-php
    - manage

- name: Symlink log folder
  file: path=/var/www/{{ item.id }}/log src=/var/log/apache2/{{ item.id }} state=link owner={{ apache2_run_user }} group={{ apache2_run_group }}
  with_items: apache2_sites

# site
- name: Creating sites
  template: >
    src={{ item.template|default(apache2_version ~ '/etc-apache2-sites-available-site.j2') }}
    dest=/etc/apache2/sites-available/{{ item.id }}{{ apache2_site_conf_extension }}
    owner=root
    group=root
    mode=0644
  with_items: apache2_sites
  tags:
    - web
    - apache2-php
    - manage

- name: Enabling sites
  file: >
    src=/etc/apache2/sites-available/{{ item.id }}{{ apache2_site_conf_extension }}
    dest=/etc/apache2/sites-enabled/{{ item.id }}{{ apache2_site_conf_extension }}
    state=link
  when: item.state is not defined or item.state == 'present'
  with_items: apache2_sites
  notify: reload apache2
  tags:
    - web
    - apache2
    - manage_sites

- name: Disabling sites
  file: >
    src=/etc/apache2/sites-enabled/{{ item.id }}{{ apache2_site_conf_extension }}
    state=absent
  when: item.state is defined and item.state == 'absent'
  with_items: apache2_sites
  notify: reload apache2
  tags:
    - web
    - apache2
    - manage_sites
